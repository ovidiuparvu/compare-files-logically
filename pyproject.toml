[build-system]
requires = ["hatchling>=1.0.0"]
build-backend = "hatchling.build"

[project]
name = "compare-files-logically"
version = "0.1.0"
authors = [
    {name = "JetBrains", email = "info@jetbrains.com"},
]
description = "A Python library for comparing files logically, with special handling for CSV and parquet files"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
dependencies = []

[project.urls]
Homepage = "https://github.com/jetbrains/compare-files-logically"
Repository = "https://github.com/jetbrains/compare-files-logically"

[project.optional-dependencies]
parquet = ["polars>=0.20.0"]

[tool.hatch.build.targets.wheel]
packages = ["compare_files_logically"]

[tool.ruff]
# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black
line-length = 88

target-version = "py312"

[tool.ruff.lint]
# Enable pycodestyle (E), Pyflakes (F), isort (I), and type annotations (ANN)
select = ["E", "F", "I", "ANN"]
ignore = []

# Allow autofix for all enabled rules (when `--fix` is passed)
fixable = ["E", "F", "I"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10
max-complexity = 10

[tool.ruff.lint.isort]
known-third-party = ["polars"]

[tool.ruff.lint.per-file-ignores]
# Tests can use assert
"tests/*" = ["S101"]

[tool.ruff.lint.pycodestyle]
max-line-length = 88

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
suppress-none-returning = true